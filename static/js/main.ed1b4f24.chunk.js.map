{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","items","perPage","currentPage","onPageChange","total","pageItems","Math","ceil","pageItemsRender","startRender","endRender","className","disabled","href","onClick","map","number","active","item","slice","App","useState","itemsPerPage","setItemsPerPage","activePageLink","setActivePageLink","length","id","onChange","e","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,MAEMC,EAAYC,KAAKC,KAAKH,EAAQH,GAC9BO,EAAkBf,EAAW,EAAGY,GAEhCI,GAAeP,EAAc,GAAKD,EAClCS,EAAYR,EAAcD,EAEhC,OACE,qCACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAWA,IACb,YACA,CAAEC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVE,KAAK,QACL,gBAAc,OACdC,QAAS,WACPX,EAAaD,EAAc,IAN/B,oBAYDM,EAAgBO,KAAI,SAAAC,GACnB,OACE,oBAAIL,UAAWA,IACb,YACA,CAAEM,OAAQf,IAAgBc,IAF5B,SAKE,mBACE,UAAQ,WACRL,UAAU,YACVE,KAAI,WAAMG,GACVF,QAAS,WACPX,EAAaa,IALjB,SAQGA,SAKT,oBAAIL,UAAWA,IACb,YACA,CAAEC,SAAUV,IAAgBG,IAF9B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVE,KAAK,QACL,gBAAc,QACdC,QAAS,WACPX,EAAaD,EAAc,IAN/B,uBAaJ,6BACGF,EAAMe,KAAI,SAAAG,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAoBA,OACnBC,MAAMV,EAAaC,SChFxBV,EAAQP,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEMhB,GAAee,EAAiB,GAAKF,EACrCZ,EAAYc,EAAiBF,EAEnC,OACE,sBAAKX,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWa,EADX,kBACmCf,EAAc,EADjD,cACwDT,EAAM0B,OAAShB,EAAYA,EAAYV,EAAM0B,OADrG,eACkH1B,EAAM0B,UAGxH,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,SAAU,SAACC,GACTN,GAAiBM,EAAEC,OAAOC,OAC1BN,EAAkB,IANtB,UASE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOA,EACPI,MAAOJ,EAAM0B,OACbzB,QAASqB,EACTpB,YAAasB,EACbrB,aAAcsB,QCjDtBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ed1b4f24.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport className from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  items: string[]\n  perPage: number;\n  currentPage: number;\n  onPageChange: (x: number) => void\n  total: number\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  perPage,\n  currentPage,\n  onPageChange,\n  total,\n}) => {\n  const pageItems = Math.ceil(total / perPage);\n  const pageItemsRender = getNumbers(1, pageItems);\n\n  const startRender = (currentPage - 1) * perPage;\n  const endRender = currentPage * perPage;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={className(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => {\n              onPageChange(currentPage - 1);\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pageItemsRender.map(number => {\n          return (\n            <li className={className(\n              'page-item',\n              { active: currentPage === number },\n            )}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${number}`}\n                onClick={() => {\n                  onPageChange(number);\n                }}\n              >\n                {number}\n              </a>\n            </li>\n          );\n        })}\n        <li className={className(\n          'page-item',\n          { disabled: currentPage === pageItems },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => {\n              onPageChange(currentPage + 1);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        )).slice(startRender, endRender)}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(3);\n  const [activePageLink, setActivePageLink] = useState(1);\n\n  const startRender = (activePageLink - 1) * itemsPerPage;\n  const endRender = activePageLink * itemsPerPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${activePageLink} items ${startRender + 1} - ${items.length > endRender ? endRender : items.length} of ${items.length}`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => {\n              setItemsPerPage(+e.target.value);\n              setActivePageLink(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        total={items.length} // total number of items to paginate\n        perPage={itemsPerPage} // number of items per page\n        currentPage={activePageLink} /* optional with 1 by default */\n        onPageChange={setActivePageLink}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}